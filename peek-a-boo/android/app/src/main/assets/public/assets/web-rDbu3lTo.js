import{W as u,o as c,q as r,t as m,u as i,v as h,x as y,y as p,z as f,A as b}from"./index-DQKq5omH.js";class l extends u{async deleteFile(t){const a=c(),n=r(a,t.path);await m(n)}async getDownloadUrl(t){const a=c(),n=r(a,t.path);return{downloadUrl:await i(n)}}async getMetadata(t){const a=c(),n=r(a,t.path),e=await h(n),o={bucket:e.bucket,createdAt:new Date(e.timeCreated).getTime(),generation:e.generation,metadataGeneration:e.metageneration,name:e.name,path:e.fullPath,size:e.size,updatedAt:new Date(e.updated).getTime(),cacheControl:e.cacheControl,contentDisposition:e.contentDisposition,contentEncoding:e.contentEncoding,contentLanguage:e.contentLanguage,contentType:e.contentType,customMetadata:e.customMetadata};return e.md5Hash&&(o.md5Hash=e.md5Hash),o}async listFiles(t){const a=c(),n=r(a,t.path),e={maxResults:t.maxResults,pageToken:t.pageToken},o=await y(n,e),d={items:o.items.map(s=>({bucket:s.bucket,name:s.name,path:s.fullPath}))};return o.nextPageToken&&(d.nextPageToken=o.nextPageToken),d}async updateMetadata(t){const a=c(),n=r(a,t.path),e={cacheControl:t.metadata.cacheControl,contentDisposition:t.metadata.contentDisposition,contentEncoding:t.metadata.contentEncoding,contentLanguage:t.metadata.contentLanguage,contentType:t.metadata.contentType,customMetadata:t.metadata.customMetadata};await p(n,e)}async uploadFile(t,a){if(!t.blob)throw new Error(l.ERROR_BLOB_MISSING);const n=c(),e=r(n,t.path);let o;t.metadata&&(o={cacheControl:t.metadata.cacheControl,contentDisposition:t.metadata.contentDisposition,contentEncoding:t.metadata.contentEncoding,contentLanguage:t.metadata.contentLanguage,contentType:t.metadata.contentType,md5Hash:t.metadata.md5Hash,customMetadata:t.metadata.customMetadata});const d=f(e,t.blob,o);return d.on("state_changed",{next:s=>{const g=this.createUploadFileCallbackEvent(s);a(g,void 0)},error:s=>{a(null,s)},complete:()=>{const s=this.createUploadFileCallbackEvent(d.snapshot);a(s,void 0)}}),Date.now().toString()}async useEmulator(t){const a=c(),n=t.port||9199;b(a,t.host,n)}createUploadFileCallbackEvent(t){return{progress:t.bytesTransferred/t.totalBytes,bytesTransferred:t.bytesTransferred,totalBytes:t.totalBytes,completed:t.state==="success"}}}l.ERROR_BLOB_MISSING="blob must be provided.";export{l as FirebaseStorageWeb};
